version: "3.2"

services:
  # UKWA Heritrix
  heritrix-worker:
    image: ukwa/heritrix-worker:2.2.6
    environment:
      - "JAVA_OPTS=-Xmx2g"
      - "MAX_TOE_THREADS=100"
      - "CLAMD_HOST=clamd"
      - "CLAMD_ENABLED=true"
      - "KAFKA_BOOTSTRAP_SERVERS=kafka:9092"
      - "KAFKA_TOCRAWL_TOPIC=fc.candidates"
      - "KAFKA_CANDIDATES_TOPIC=fc.candidates"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_SEEK_TO_BEGINNING=false" # To set to false if we try to re-use the state folders, to cope with the size of the tocrawl feed.
      - "KAFKA_MAX_POLL_RECORDS=1000"
      - "KAFKA_NUM_MESSAGE_THREADS=16"
      - "RECORD_DECIDING_RULE=true"
      - "WEBRENDER_ENDPOINT=http://wrender:8010/render"
      - "WEBRENDER_ENABLED=true"
      - "CDXSERVER_ENDPOINT=http://cdxserver:8080/fc"
      - "JOB_NAME=frequent"
      - "HERITRIX_USER=admin"
      - "HERITRIX_PASSWORD=bl_uk"
      - "LAUNCH_AUTOMATICALLY=true"
    volumes:
      - /data/test/heritrix/output:/heritrix/output
    deploy:
      replicas: 1

  # Clamd virus scanning Service
  clamd:
    image: ukwa/clamd
    deploy:
      replicas: 4


  # Kafka used as main mechanism for URL logging
  # Needs a Zookeeper too
  # ----
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:1.1.0
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.45.19
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://192.168.45.19:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      LOG_RETENTION_HOURS: -1
      LOG_RETENTION_BYTES: -1
      NUM_PARTITIONS: 128
      KAFKA_CREATE_TOPICS: "fc.to-crawl:128:1,fc.crawled:128:1,fc.candidates:128:1"
      # persistent files are in consistent locations, each server supplies a /kafka folder.
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: /kafka/kafka-logs/kafka-logs-broker-1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/test/kafka:/kafka
    #deploy:
    #  mode: global

  # Kafka UI
  kafka-ui:
    image: janschultecom/docker-trifecta
    ports:
      - "9000:9000"
    environment:
      - "ZK_HOST=zookeeper:2181"

  # tinycdxserver
  cdxserver:
    image: ukwa/tinycdxserver
    command: "java -jar outbackcdx.jar -v -d /cdx-data -p 8080 -b 0.0.0.0"
    ports:
      - "9090:8080"
    volumes:
      - /data/test/cdxserver:/cdx-data


  # ----------------------------------------------
  # WARC Proxy
  # ----------------------------------------------

  # The WARChiving proxy itself
  warcprox:
    image: ukwa/warcprox
    command: "warcprox -b 0.0.0.0 -d /output/warcs --base32 --gzip --rollover-idle-time 600 --dedup-db-file /dev/null --stats-db-file /dev/null --quiet --plugin warcprox-plugins.listeners.KafkaCaptureFeed --plugin warcprox-plugins.listeners.UpdateOutbackCDX"
    environment:
      - "KAFKA_BOOTSTRAP_SERVERS=192.168.45.19:9094"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_ACKS=1"
      - "CDXSERVER_ENDPOINT=http://cdxserver:8080/fc"
    volumes:
      - /data/test/heritrix/wren:/output/warcs
    deploy:
      replicas: 1


  # ----------------------------------------------
  # Web Render Farm
  # ----------------------------------------------

  # PhantomJS web page rendering service
  wrender:
    image: ukwa/webrender-phantomjs:2.0.10
    environment:
      - "WARCPROX=warcprox:8000"
      - "LC_ALL=en_US.utf8"
      - "TMP=/tmp/webrender"
    volumes:
      - type: tmpfs
        target: /tmp/webrender
    deploy:
      replicas: 1


  # ----------------------------------------------
  # Monitoring & Control
  # ----------------------------------------------

  hapy-dash:
    image: ukwa/ukwa-manage
    ports:
      - 9118:8000
    environment:
      - "HERITRIX_USERNAME=admin"
      - "HERITRIX_PASSWORD=bl_uk"
      - "CRAWL_JOBS_FILE=/crawl-jobs.json"
      - "WEBHDFS_PREFIX=http://warc-server:8000/by-filename/"
      - "CDX_SERVER=http://cdxserver:8080/fc"
      - "KAFKA_BOOTSTRAP_SERVERS=192.168.45.19:9094"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_SEEK_TO_BEGINNING=False"
    volumes:
      - /root/github/ukwa-ingest-services/deploy/crawl-engine/test/crawl-jobs.json:/crawl-jobs.json
    depends_on:
      - heritrix-worker
      - kafka
      - cdxserver
      - warc-server

  prometheus:
    image: prom/prometheus
    ports:
      - 9191:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus-data:/prometheus
    user: root
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.external-url=http://crawler02.bl.uk:9191/'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'


  # ----------------------------------------------
  # QA Access
  # ----------------------------------------------
  warc-server:
    image: ukwa/warc-server
    ports:
      - 8001:8000
    environment:
      - "WARC_PATHS=/heritrix/output,/heritrix/wren"
    volumes:
      - /data/test/heritrix/output:/heritrix/output
      - /data/test/heritrix/wren:/heritrix/wren

  # OpenWayback for QA
  openwayback:
    image: ukwa/waybacks
    ports:
      - "8080:8080"
      - "8090:8090"
    environment:
      - "UKWA_OWB_VERSION=qa"
      - "WAYBACK_URL_PORT=8080"
      - "WAYBACK_PROXY_PORT=8090"
      - "CDX_WHITELIST="
      - "WAYBACK_EXCLUDE_FILE=/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/exclude.txt"
      - "WAYBACK_EMBARGO=0"
      - "WAYBACK_HTTPFS_PREFIX=http://warc-server:8000/by-filename/"
      - "CDX_INDEX_SERVER=http://cdxserver:8080/fc"
      - "WAYBACK_URL_PREFIX=http://crawler02.bl.uk:8080"
      - "WAYBACK_URL_HOST=crawler02.bl.uk"

  # ----------------------------------------------
  # Test sites
  # ----------------------------------------------

  # Local version of the Archival Acid Test: http://acid.matkelly.com
  acid-test:
    image: ukwa/archival-acid-test
    ports:
      - "180:80"  
    networks:
      default:
        aliases:
          - acid.matkelly.com

  # Local version of the UKWA test site: http://crawl-test-site.webarchive.org.uk
  crawl-test:
    image: ukwa/crawl-test-site
    ports:
      - "280:80"
    networks:
      default:
        aliases:
          - crawl-test-site.webarchive.org.uk

  # ----------------------------------------------
  # Providing system and container level metrics:
  # ----------------------------------------------

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /data/docker/:/var/lib/docker:ro
    ports:
      - 9393:8080



