version: "3.2"

services:

  # ----------------------------------------------
  # Kafka: used for URI routing and logging
  # ----------------------------------------------
  # Needs a Zookeeper too
  # ----
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    volumes:
      - ./test/zookeeper-data:/opt/zookeeper-3.4.9/data

  kafka:
    image: wurstmeister/kafka:1.1.0
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.11
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.11:9092
      LOG_RETENTION_HOURS: -1
      LOG_RETENTION_BYTES: -1
      NUM_PARTITIONS: 128
      KAFKA_CREATE_TOPICS: "uris.tocrawl.dc:512:1 --config=compression.type=snappy,uris.crawled.dc:128:1 --config=compression.type=snappy"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      LOG4J_LOGGER_KAFKA: INFO
      # persistent files are in consistent locations, each server supplies a /kafka folder.
      KAFKA_LOG_DIRS: /kafka/kafka-logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test/data-kafka-logs:/kafka/kafka-logs
    depends_on:
      - zookeeper

  # Kafka UI
  kafka-rest:
    image: confluentinc/cp-kafka-rest:4.1.0
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      #KAFKA_REST_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      KAFKA_REST_HOST_NAME: kafka-rest
    depends_on:
      - zookeeper
      - kafka

  kafka-ui:
    image: landoop/kafka-topics-ui
    ports:
     - 8000:8000
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest:8082
      PROXY: 'true'
    depends_on:
      - kafka-rest
